字符串和字符串函数（c primer plus）
1、递增递减运算符(++;--)：只能用于变量名前（只能用于可修改的左值），不能用于常量。
2、数组和指针的区别（主要）：数组是常量，指针是变量
    相同点：a、两者都可以用数组表示法；b、两者都能进行指针加法操作。
    不同点：只有指针表示法可以进行递增操作。
    假设两者统一：head = heart；不能用：heart = head。（head为指针表示法，heart为数组表示法）
    即：赋值运算符的左侧必须是变量（可修改的左值）
    重点：初始化数组把静态存储区的字符串拷贝到数组中，而初始化指针只把字符串的地址拷贝给指针。
3、数组的元素是变量（除非数组被声明为 const），但是数组名不是变量。
4、如果不修改字符串，不要用指针指向字符串字面量（字符串常量），建议把指针初始化为字符字面量时使用 const 限定符；然而把非 const 数组初始化为字符串字面量时不会导致所有完全相同的字符串字面量都改变，因为数组获得是原始字符串的副本。
5、字符串可以看作为指针。（printf("%s, %p, %c\n", "we", "are", *"space farers);）
6、让编译器计算字符串数组的大小只能用在初始化数组时;如果创建一个稍后再填充的数组，就必须在声明时指定大小。
7、字符数组名和其他数组名一样，是该数组的首元素地址。
8、字符串输入函数：scanf();gets(); fgets()
    scanf():更像是获取“单词”函数，而不是获取字符串函数，以空白字符（空行，空格，制表符，换行符）。典型的用法是：读取并转换混合数据类型为某种标准形式。
        scanf()和gets()类似，如果输入的内容过长，会导致数据溢出。不过，在%s 转换说明中使用字段宽度可防止溢出。
    gets():该函数只知道数组的开始处，并不知道数组中有多少个元素，如果输入的字符串过长，会导致缓冲区溢出（buffer overflow）。
        C11标准：直接废除了gets（）函数;新增gets_s()函数可以替代gets()（可选扩展）;
    fgets()（和fputs()搭配使用）:解决溢出问题，专门设计用于处理文件输入；读取到换行符会存储在字符串中。
9、空字符和空指针：空字符是整型类型，空指针是指针类型；空字符是一个字符，占一个字节；空指针是一个地址，通常占4个字节。
